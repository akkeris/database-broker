version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:18.06.1-ce-git
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests
          command: |
            apk update --no-progress -q
            apk add openssl ca-certificates git make build-base go nodejs --no-progress -q
            wget https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64 -q -O /usr/bin/dep
            chmod +x /usr/bin/dep
            mkdir -p /go/src/github.com/akkeris/
            cp -a -p . /go/src/github.com/akkeris/database-broker
            cd /go/src/github.com/akkeris/database-broker
            GOROOT=/usr/lib/go GOPATH=/go dep ensure
            GOROOT=/usr/lib/go GOPATH=/go go get golang.org/x/tools/cmd/cover
            GOROOT=/usr/lib/go GOPATH=/go DATABASE_URL=postgres://root:root@localhost:5432/test\?sslmode=disable NAME_PREFIX=testing make coverage
            npm install codacy-coverage -g
            cat cover.out | codacy-coverage
      - run:
          name: Build application docker image
          command: |
            docker build -t database-broker .
      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" != "release" ]; then
              if [ "${CIRCLE_PROJECT_USERNAME}" == "akkeris" ]; then 
                docker login -u $DOCKER_LOGIN -p $DOCKER_PASS
                docker tag database-broker "docker.io/akkeris/database-broker:${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
                docker push "docker.io/akkeris/database-broker:${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
                if [ "${CIRCLE_BRANCH}" == "master" ]; then
                  docker tag database-broker "docker.io/akkeris/database-broker:release-${CIRCLE_BUILD_NUM}"
                  docker tag database-broker "docker.io/akkeris/database-broker:latest"
                  docker push "docker.io/akkeris/database-broker:latest"
                  docker push "docker.io/akkeris/database-broker:release-${CIRCLE_BUILD_NUM}"
                fi
              fi
            fi
